//┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
//┃ボタン                                                                               　┃
//┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
public class Button {
  private float x, y, w, h;       //描画座標
  private color c;                //色
  private String message;         //文字
  //-----------------------------------------------------------------------------
  //「初期化」タスク生成時に１回だけ行う処理
  //-----------------------------------------------------------------------------
  public Button(int x, int y, int w, int h, String message) {
    this.x=x;                  //座標x
    this.y=y;                  //座標y
    this.w=w;                  //座標w
    this.h=h;                  //座標h
    this.message=message;      //文字
    this.c=color(255);         //色
  }
  //-----------------------------------------------------------------------------
  //「描画」１フレーム毎に行う処理
  //-----------------------------------------------------------------------------
  public void draw2D() {
    //矩形表示
    changeColor();         //接触すると赤くなる
    fill(this.c);
    rect(this.x, this.y, this.w, this.h);
    //文字表示
    fill(0);
    textSize(32);
    text(this.message, this.x+4, this.y+32);
  }
  //-----------------------------------------------------------------------------
  //「実行」１フレーム毎に行う処理
  //-----------------------------------------------------------------------------
  void update() {
    //画像表示
    draw2D();
  }
  //-----------------------------------------------------------------------------
  //接触判定
  //-----------------------------------------------------------------------------
  boolean contact(int x_, int y_) {
    return x_>this.x &&x_<this.x+this.w && y_>this.y && y_<this.y+this.h;
  }

  //-----------------------------------------------------------------------------
  //矩形　色が変わる
  //-----------------------------------------------------------------------------
  void changeColor() {
    this.c=contact(mouseX, mouseY)?color(255, 0, 0):color(255);
  }
  //-----------------------------------------------------------------------------
  //押す　判定
  //-----------------------------------------------------------------------------
  boolean clicked() {
    return mouseButton==LEFT && contact(mouseX, mouseY);
  }
}